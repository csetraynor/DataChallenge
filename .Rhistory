.libPaths()
.libPaths("C:/RFolder/R-3.4.2/library")
install.pa]
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
# read in all three datasets (you'll pick one to use later)
recpies <- read_csv("../input/epirecipes/epi_r.csv")
bikes <- read_csv("../input/nyc-east-river-bicycle-crossings/nyc-east-river-bicycle-counts.csv")
weather <- read_csv("../input/szeged-weather")
# read in all three datasets (you'll pick one to use later)
recpies <- read_csv("../input/epirecipes/epi_r.csv")
bikes <- read_csv("../input/nyc-east-river-bicycle-crossings/nyc-east-river-bicycle-counts.csv")
weather <- read_csv("../input/szeged-weather")
# read in all three datasets (you'll pick one to use later)
recpies <- read_csv("epi_r.csv")
bikes <- read_csv("nyc-east-river-bicycle-crossings/nyc-east-river-bicycle-counts.csv")
weather <- read_csv("szeged-weather")
bikes <- read_csv("nyc-east-river-bicycle-counts.csv")
weather <- read_csv("weatherHistory")
weather <- read_csv("weatherHistory.csv")
# quickly clean our dataset
recpies <- recpies %>%
filter(calories < 10000) %>% # remove outliers
na.omit() # remove rows with NA values
# are the ratings all numeric?
print("Is this variable numeric?")
is.numeric(recpies$rating)
# are the ratings all integers?
print("Is this variable only integers?")
all.equal(recpies$rating, as.integer(recpies$rating)) == T
# plot & add a regression line
ggplot(recpies, aes(x = calories, y = dessert)) + # draw a
geom_point() + # add points
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "binomial")) # ...from the binomial family
#we choose weather
weather <- read_csv("weatherHistory.csv")
# quickly clean our dataset
weather <- weather %>%
na.omit() # remove rows with NA values
# check category temperature
print("Is this variable numeric?")
is.numeric(weather$temperature)
is.numeric(weather$`Temperature (C)`)
# check category temperature
print("Is temperature a numeric variable?")
is.numeric(weather$`Temperature (C)`)
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = Summary )) + # draw a
geom_point() + # add points
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "multinomial")) # ...from the binomial family
weather <- weather %>%
Summary <- as.factor(Summary)
weather$Summary <- as.factor(weather$Summary)
levels(weather$Summary)
ddply(weather(Summary),  summarise, sumcount = count(Summary))
library(plyr)
library(dplyr)
ddply(weather(Summary),  summarise, sumcount = count(Summary))
ddply(weather, (Summary),  summarise, sumcount = count(Summary))
ddply(weather, .(Summary),  summarise, sumcount = count(Summary))
ddply(weather, .(Summary),  mutate, sumcount = count(Summary))
weather %>%
group_by(Summary) %>%
summarise(no_rows = length(Summary))
weather %>%
group_by(Summary) %>%
summarise(no_rows = length(ID))
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = 'Daily Summary' )) + # draw a
geom_point() + # add points
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "multinomial")) # ...from the multinomial family
#we choose weather
weather <- read_csv("weatherHistory.csv")
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = `Daily Summary` )) + # draw a
geom_point() # ...from the multinomial family
# clean our dataset
weather <- weather %>%
na.omit() # remove rows with NA values
#Factor data
weather$Summary <- as.factor(weather$Summary)
weather %>%
group_by(Summary) %>%
summarise(no_rows = length(ID))
nrow(weather)
1:nrow(weather)
weather$ID <- 1:nrow(weather)
weather %>%
group_by(Summary) %>%
summarise(no_rows = length(ID))
weather
weather %>%
group_by(Summary) %>%
mutate(no_rows = length(ID))
weather$no_rows
weather %>%
group_by(Summary) %>%
mutate(no_rows = length(Summary))
weather$no_row
weather <- read_csv("weatherHistory.csv")
library(tidyverse)
install.packages("tidyverse")
weather <- read_csv("weatherHistory.csv")
library(tidyverse)
weather <- read_csv("weatherHistory.csv")
weather <- weather %>%
na.omit() # remove rows with NA values
print("Is temperature a numeric variable?")
is.numeric(weather$`Temperature (C)`)
print("Is wind speed a numeric variable?")
is.numeric(weather$`Wind Speed (km/h)`)
ggplot(weather, aes(x = `Temperature (C)`, y = `Wind Speed (km/h)` )) + # draw a
geom_point() +
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "normal")) # ...from the binomial family
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = `Wind Speed (km/h)` )) + # draw a
geom_point() +
scale_y_log10()+
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian"))
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = `Wind Speed (km/h)` )) + # draw a
geom_point() +
scale_x_log10()+
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian"))
is.numeric(weather$Humidity)
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = Humidity)) + # draw a
geom_point() +
scale_x_log10()+
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian")) # ...from the binomial family
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = Humidity)) + # draw a
geom_point() +
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian")) #
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = Humidity)) + # draw a
geom_point() +
scale_y_log10()+
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian"))
ggplot(weather, aes(x = `Temperature (C)`, y = Humidity)) + # draw a
geom_point() +
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian"))
# clean our dataset
weather <- weather %>%
na.omit()
filter(Humidity > 0) # remove rows with NA values
#Factor data
# clean our dataset
weather <- weather %>%
filter(Humidity > 0)
# plot & add a regression line
ggplot(weather, aes(x = `Temperature (C)`, y = Humidity)) + # draw a
geom_point() +
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "gaussian"))
# Day 1
library(tidyverse)
# read in all three datasets (you'll pick one to use later)
recpies <- read_csv("epi_r.csv")
bikes <- read_csv("nyc-east-river-bicycle-counts.csv")
weather <- read_csv("weatherHistory.csv")
# quickly clean our dataset
recpies <- recpies %>%
filter(calories < 10000) %>% # remove outliers
na.omit() # remove rows with NA values
# are the ratings all numeric?
print("Is this variable numeric?")
is.numeric(recpies$rating)
# are the ratings all integers?
print("Is this variable only integers?")
all.equal(recpies$rating, as.integer(recpies$rating)) == T
# plot & add a regression line
ggplot(recpies, aes(x = calories, y = dessert)) + # draw a
geom_point() + # add points
geom_smooth(method = "glm", # plot a regression...
method.args = list(family = "binomial")) # ...fro
